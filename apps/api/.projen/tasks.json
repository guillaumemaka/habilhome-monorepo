{
  "tasks": {
    "clobber": {
      "name": "clobber",
      "category": "30.maintain",
      "description": "hard resets to HEAD of origin and cleans the local repo",
      "env": {
        "BRANCH": "$(git branch --show-current)"
      },
      "steps": [
        {
          "exec": "git checkout -b scratch",
          "name": "save current HEAD in \"scratch\" branch"
        },
        {
          "exec": "git checkout $BRANCH"
        },
        {
          "exec": "git fetch origin",
          "name": "fetch latest changes from origin"
        },
        {
          "exec": "git reset --hard origin/$BRANCH",
          "name": "hard reset to origin commit"
        },
        {
          "exec": "git clean -fdx",
          "name": "clean all untracked files"
        },
        {
          "say": "ready to rock! (unpushed commits are under the \"scratch\" branch)"
        }
      ],
      "condition": "git diff --exit-code > /dev/null"
    },
    "start": {
      "name": "start",
      "steps": [
        {
          "exec": "cross-env NODE_ENV=production node -r 'dotenv/config' dist/bin/www.js"
        }
      ]
    },
    "dev": {
      "name": "dev",
      "steps": [
        {
          "exec": "cross-env NODE_ENV=development nodemon -r 'node_modules/dotenv/config' src/bin/www.js"
        }
      ]
    },
    "ci": {
      "name": "ci",
      "steps": [
        {
          "exec": "cross-env NODE_ENV=test rimraf dist && jest -ci --coverage --verbose --forceExit --detectOpenHandles"
        }
      ]
    },
    "cover": {
      "name": "cover",
      "steps": [
        {
          "exec": "yarn test --coverage"
        }
      ]
    },
    "lint": {
      "name": "lint",
      "steps": [
        {
          "exec": "eslint --fix src && prettier --write \"src/**/*.js\""
        }
      ]
    },
    "cli": {
      "name": "cli",
      "steps": [
        {
          "exec": "babel-node -r 'node_modules/dotenv/config' src/lib/cli/index.js"
        }
      ]
    },
    "compile": {
      "name": "compile",
      "category": "00.build",
      "description": "Only compile"
    },
    "test:compile": {
      "name": "test:compile",
      "category": "10.test",
      "description": "compiles the test code"
    },
    "test:watch": {
      "name": "test:watch",
      "category": "10.test",
      "description": "Run jest in watch mode",
      "steps": [
        {
          "exec": "jest --watch"
        }
      ]
    },
    "test:update": {
      "name": "test:update",
      "category": "10.test",
      "description": "Update jest snapshots",
      "steps": [
        {
          "exec": "jest --updateSnapshot"
        }
      ]
    },
    "upgrade-dependencies": {
      "name": "upgrade-dependencies",
      "description": "upgrade dependencies",
      "env": {
        "CI": "0"
      },
      "steps": [
        {
          "exec": "npm-check-updates --upgrade --target=minor --reject='projen'"
        },
        {
          "exec": "pnpm i"
        },
        {
          "exec": "pnpm update @babel/cli @babel/core @babel/node @babel/plugin-proposal-decorators @babel/plugin-proposal-object-rest-spread @babel/plugin-transform-runtime @babel/preset-env babel-core babel-eslint esbuild eslint-config-prettier eslint-config-standard eslint-plugin-import eslint-plugin-jest eslint-plugin-node eslint-plugin-promise eslint-plugin-standard eslint formdata-polyfill husky jest jest-junit json-form-data lint-staged nodemon npm-check-updates rimraf smid supertest @babel/runtime @koa/cors @koa/multer @koa/router accept-language-parser awilix-koa awilix aws-sdk axios bcryptjs bluebird bristol commander cross-env debug dotenv email-templates fast-json-patch fejl joi jsonwebtoken koa-body koa-bodyparser koa-compress koa-cookie koa-passport koa-respond koa-roles koa koa2-validation lodash mime mongoose-paginate-v2 mongoose multer-s3-transform multer-s3 multer-sharp-s3 multer nats nodemailer palin passport-jwt passport password-prompt pug readline-sync sharp slug yenv"
        },
        {
          "exec": "npx projen"
        }
      ]
    },
    "upgrade-projen": {
      "name": "upgrade-projen",
      "description": "upgrade projen",
      "env": {
        "CI": "0"
      },
      "steps": [
        {
          "exec": "npm-check-updates --upgrade --target=minor --filter='projen'"
        },
        {
          "exec": "pnpm i"
        },
        {
          "exec": "pnpm update projen"
        },
        {
          "exec": "npx projen"
        }
      ]
    },
    "default": {
      "name": "default",
      "steps": [
        {
          "exec": "node .projenrc.js"
        }
      ]
    },
    "build": {
      "name": "build",
      "steps": [
        {
          "exec": "rimraf dist && NODE_ENV=production babel src -d dist -s"
        }
      ]
    },
    "test": {
      "name": "test",
      "steps": [
        {
          "exec": "cross-env NODE_ENV=test rimraf dist && jest --detectOpenHandles --forceExit --runInBand"
        }
      ]
    },
    "projen:update": {
      "name": "projen:update",
      "steps": [
        {
          "exec": "rush add projen --consistent"
        }
      ]
    },
    "projen": {
      "name": "projen",
      "steps": [
        {
          "exec": "npx projen --no-post"
        }
      ]
    }
  },
  "env": {
    "PATH": "$(npx -c \"node -e \\\"console.log(process.env.PATH)\\\"\")"
  },
  "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \"npx projen\"."
}
